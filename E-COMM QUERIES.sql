use ecom_insights;

-- 1. Count of all orders in the database
SELECT COUNT(OrderID) AS total_orders FROM orders;

-- 2. Total revenue from all products
SELECT SUM(p.Price * od.Quantity) AS total_revenue
FROM products p
JOIN order_details od ON p.ProductID = od.ProductID;

-- 3. Total number of unique products sold
SELECT COUNT(DISTINCT od.ProductID) AS unique_products_sold
FROM order_details od;

-- 4. List of all products with their prices
SELECT ProductID, ProductName, Price
FROM products;

-- 5. Top 5 most expensive products
SELECT ProductName, Price
FROM products
ORDER BY Price DESC
LIMIT 5;

-- 6. Total orders placed by each customer
SELECT o.CustomerID, COUNT(o.OrderID) AS total_orders
FROM orders o
GROUP BY o.CustomerID;

-- 7. Total revenue generated by each product
SELECT p.ProductName, SUM(od.Quantity * p.Price) AS total_revenue
FROM products p
JOIN order_details od ON p.ProductID = od.ProductID
GROUP BY p.ProductName
ORDER BY total_revenue DESC;

-- 8. Products not yet ordered
SELECT p.ProductName
FROM products p
LEFT JOIN order_details od ON p.ProductID = od.ProductID
WHERE od.ProductID IS NULL;

-- 9. Total orders placed for each product
SELECT p.ProductName, SUM(od.Quantity) AS total_quantity_ordered
FROM products p
JOIN order_details od ON p.ProductID = od.ProductID
GROUP BY p.ProductName
ORDER BY total_quantity_ordered DESC;

-- 10. Total revenue for each customer
SELECT o.CustomerID, SUM(od.Quantity * p.Price) AS total_spent
FROM orders o
JOIN order_details od ON o.OrderID = od.OrderID
JOIN products p ON od.ProductID = p.ProductID
GROUP BY o.CustomerID
ORDER BY total_spent DESC;

-- 11. Average price of products
SELECT AVG(Price) AS average_product_price
FROM products;

-- 12. Customers who placed the highest number of orders
SELECT o.CustomerID, COUNT(o.OrderID) AS total_orders
FROM orders o
GROUP BY o.CustomerID
ORDER BY total_orders DESC
LIMIT 5;

-- 13. Top 5 products by revenue
SELECT p.ProductName, SUM(od.Quantity * p.Price) AS revenue
FROM products p
JOIN order_details od ON p.ProductID = od.ProductID
GROUP BY p.ProductName
ORDER BY revenue DESC
LIMIT 5;

-- 14. Total number of orders handled by each employee
SELECT o.EmployeeID, COUNT(o.OrderID) AS orders_handled
FROM orders o
GROUP BY o.EmployeeID;


-- 15. Products priced above the average price
SELECT ProductName, Price
FROM products
WHERE Price > (SELECT AVG(Price) FROM products);

-- 16. Total revenue for each order
SELECT o.OrderID, SUM(od.Quantity * p.Price) AS order_revenue
FROM orders o
JOIN order_details od ON o.OrderID = od.OrderID
JOIN products p ON od.ProductID = p.ProductID
GROUP BY o.OrderID;


-- 17. List of all products with their supplier information
SELECT p.ProductName, p.Price, s.SupplierName
FROM products p
JOIN suppliers s ON p.SupplierID = s.SupplierID;

-- 18. Most frequently ordered product
SELECT p.ProductName, SUM(od.Quantity) AS total_quantity
FROM products p
JOIN order_details od ON p.ProductID = od.ProductID
GROUP BY p.ProductName
ORDER BY total_quantity DESC
LIMIT 1;

-- 19. Count of orders shipped by each shipper
SELECT o.ShipperID, COUNT(o.OrderID) AS orders_shipped
FROM orders o
GROUP BY o.ShipperID;

-- 20. Customers who have placed more than 5 orders
SELECT o.CustomerID, COUNT(o.OrderID) AS total_orders
FROM orders o
GROUP BY o.CustomerID
HAVING total_orders > 5;

-- 21. Revenue contribution of each category
SELECT c.CategoryName, SUM(od.Quantity * p.Price) AS category_revenue
FROM categories c
JOIN products p ON c.CategoryID = p.CategoryID
JOIN order_details od ON p.ProductID = od.ProductID
GROUP BY c.CategoryName;


-- 22. List of orders along with the total number of products in each
SELECT o.OrderID, COUNT(od.ProductID) AS total_products
FROM orders o
JOIN order_details od ON o.OrderID = od.OrderID
GROUP BY o.OrderID;

-- 23. Products with the highest quantity sold in a single order
SELECT p.ProductName, MAX(od.Quantity) AS max_quantity_sold
FROM order_details od
JOIN products p ON od.ProductID = p.ProductID
GROUP BY p.ProductName
ORDER BY max_quantity_sold DESC;

-- 24. Revenue generated per shipper
SELECT s.ShipperName, SUM(od.Quantity * p.Price) AS revenue_generated
FROM shippers s
JOIN orders o ON s.ShipperID = o.ShipperID
JOIN order_details od ON o.OrderID = od.OrderID
JOIN products p ON od.ProductID = p.ProductID
GROUP BY s.ShipperName;

-- 25. Top 5 customers based on the number of products purchased
SELECT c.CustomerName, SUM(od.Quantity) AS total_products_purchased
FROM customers c
JOIN orders o ON c.CustomerID = o.CustomerID
JOIN order_details od ON o.OrderID = od.OrderID
GROUP BY c.CustomerName
ORDER BY total_products_purchased DESC
LIMIT 5;

-- 26. Monthly revenue per product category
SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS month, c.CategoryName, SUM(od.Quantity * p.Price) AS revenue
FROM orders o
JOIN order_details od ON o.OrderID = od.OrderID
JOIN products p ON od.ProductID = p.ProductID
JOIN categories c ON p.CategoryID = c.CategoryID
GROUP BY month, c.CategoryName
ORDER BY month;

-- 27. Total number of orders placed per day
SELECT DATE(o.OrderDate) AS order_date, COUNT(o.OrderID) AS total_orders
FROM orders o
GROUP BY order_date
ORDER BY order_date;